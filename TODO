TODO:

Implement:

3. Saturation
    - requires rain timer and button or equiv test mechanism
5. Trees and other local point modifiers (proximity modifier object class, usable for drains, trees, roads, etc.)
    - proximity method returns all analysis points within a radius
    - scale effect by distance 
6. River object. Where the bedrock is at a local minimum, uses a shovel to dig soil to zero there and attaches a kill zone for physics bodies that reach the "river".
7. Display scale bars H and V
8. Balls back to soil after not moving for a certain time
9. Test planefinder based on max depth instead of mean
10. Disable dragging while in shovel or dump mode
12. Change thickness slider to a +/- soil everywhere button that adds a fixed increment per click    
13. Juice! 
    - shovel scrape in soil, clink on bedrock
    - truck beep beep on select, then whump on dump
    - landslide rumble
    - rain sound and thunder when raining
14. Get physics time? Can slow clock to match event time
15. Grading shovel that smooths an area


Fix:

3. Are killed bodies that exit L side removed properly from the balls array?


Sprite work:

1. button states
2. house less tall
3. house physics poly to match shape

Code style work:

1. Deglobalize as much as possible
2. Parameters to interface
3. Make sure scoping is correct overall for modularity
4. Implement modularity using prototype function and JSON in the playState definition


DONE:

√ House and other "real object" sprites should scale with the physical coordinate system 
√ Balls not being killed when they accidentally cross into subsurface 
√ Set surface as only physics chain/bedrock separate chain is problematic
√ Still a fair number of balls killed when running over sharply convex obstacles
    - can be fixed by killing when below lowest adjacent point, rather than interpolation between (note: fixed interpolation routine instead :) ).
√ Analysis point properties
    √ requires topographic slope
√ Analysis point graphics
√ Failure plane finding and extrapolation
√ Slide bodies not being converted to balls when within a short range of the right boundary
    - (problem does not present now that we don't use the LS shovel)
√ Disallow digging of soil below bedrock surface by shovels?
√ Analysis point placement and update handling
    - Dots stay in place relative to soil body (more intuitively physical) and then are destroyed where the LS has ocurred or surfave dug.
√ Balls generated on zero-thickness soil during LS
    - likely due to analysis points persisting below bedrock?
    - or bug in the thresholder/planefinder
        (was actually unenforced negative soil thicknesses in the doLandslide function)
√ Analysis point fade and reimposed upon changes to soil thickness
    - allow "sectoring" so only changed sectors are redotted

        
        
DEPRECATED NOTES


        - is it worth having 2 behaviors? How about redotting where thickened (below existing points)? 
            - needs a planefinder based on current depth, can this be used for the FS planefinder? Planefinder based on an arbitrary property of the dots.
                - can generalize to finding new surface of balls? common algo is finding for a characteristic among a local group of analysis points with locations defined by (x,y).
                
        - take a horizontally-averaged soil moisture z-profile through the changed sector and use it to repopulate redotted sectors